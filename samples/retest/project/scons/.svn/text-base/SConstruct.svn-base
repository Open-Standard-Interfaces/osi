##############################################################################
#
#     RETEST
#
#     Copyright (c) 2006 Rehno Lindeque. All rights reserved.
#
##############################################################################

import os
import sys

user_build_dir    = '../../bin'
user_target       = 'retest'
user_scons_dirs   = ['.',
                     '../../../common/project/scons',
                     '../../../../openre/rewrapper/project/scons']
user_lib_dirs     = ['../../../../implementations/glrasre/lib',
                     '../../../../dependencies/mingw']
user_libs         = ['glrasre',                 # OpenRE Libraries
                     'glee','opengl32','glu32', # OpenGL Libraries
                     'gdi32']                   # Windows Libraries
user_include_dirs = ['../../../../api',                  # OSI Headers
                     '../../../common/src',              # Common Sample Headers
                     '../../../../openre/rewrapper/src'] # REWrapper Headers
user_definitions  = [ #'OS_64BIT' (TODO)
                    ]
user_debugflag = '-g' # '-ggdb'

#########################################################

launch_dir = GetLaunchDir()
script_dir = os.getcwd()

tool = 'mingw'
Export('tool')

definitions = user_definitions
Export('definitions')

verbose = 0
if '-Q' not in sys.argv:
  verbose = 1
Export('verbose')

include_dirs = []
for dir in user_include_dirs:
  include_dirs.append(os.path.abspath(os.path.join(script_dir, dir)))
Export('include_dirs')

#env = Environment(CPPPATH = abs_include_dirs)
env = Environment()
env.Tool(tool)

if ARGUMENTS.get('debug', 0):
  env.Append(CCFLAGS = user_debugflag)

Export('env')

objects = []
Export('objects')

if verbose:
  print '-----------------------------------'
  print 'Include dirs: %s' % include_dirs
  print 'Tool: %s' % tool
  print 'Definitions: %s' % definitions

for dir in user_scons_dirs:
  SConscript('%s/SConscript' % dir)

target = user_target
Export('target')

lib_dirs = []
for dir in user_lib_dirs:
  lib_dirs.append(os.path.abspath(dir))
Export('lib_dirs')

libs = []
for lib in user_libs:
  libs.append(lib)
Export('libs')

SConscript('SConstargetscript', build_dir=user_build_dir, duplicate=0)

if verbose:
  print '-----------------------------------'
